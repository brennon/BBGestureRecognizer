ViewController.swift
	class ViewController: UIViewController
BBTapGestureRecognizer.swift
	override func touchesBegan(touches: NSSet, withEvent event: UIEvent)
	override func touchesEnded(touches: NSSet, withEvent event: UIEvent)
	override func touchesCancelled(touches: NSSet, withEvent event: UIEvent)
	private func correctTapCountForAllTouches(touches: NSSet) -> Bool
	private func tooManyTapsForSomeTouch(touches: NSSet) -> Bool
	private func failRecognizerAndIgnoreTouches(touches: NSSet, withEvent event: UIEvent)
	override func reset()
AppDelegate.swift
	class AppDelegate: UIResponder, UIApplicationDelegate
SKNode.h
	class SKNode : UIResponder, NSCopying, NSCoding
TestScene.swift
	class TestScene: SKScene
BBGestureRecognizer.swift
	var description: String
	let fromState: BBGestureRecognizerState
	let toState: BBGestureRecognizerState
	let shouldNotify: Bool
	var name = ""
	func recognizerIsRecognizing(recognizer: BBGestureRecognizer) -> Bool
	var pendingTerminalState: BBGestureRecognizerState?
	var terminalStateIsPending: Bool
	func schedulePendingRecognition(withState: BBGestureRecognizerState, andDelay delay: NSTimeInterval)
	func updatePendingRecognition(withState: BBGestureRecognizerState)
	private var failureDependents = [BBGestureRecognizer]()
	private func addFailureDependent(dependentRecognizer: BBGestureRecognizer)
	private func removeFailureDependent(recognizer: BBGestureRecognizer)
	private func failureDependencyResolved(resolvingRecognizer: BBGestureRecognizer, withState state: BBGestureRecognizerState)
	func ==(lhs: BBGestureRecognizer, rhs: BBGestureRecognizer) -> Bool
